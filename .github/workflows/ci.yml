name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [18, 20]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2-dev
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run build
        
      - name: Build application
        run: npm run build
        
      - name: Test build artifacts
        run: |
          echo "Checking build artifacts..."
          ls -la dist/ || echo "No dist directory found"
          
  build-test:
    runs-on: macos-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Test distributables build
        run: npm run dist:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: Verify build outputs
        run: |
          echo "Build completed successfully"
          ls -la release/ || echo "No release directory found"